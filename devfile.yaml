apiVersion: 1.0.0
metadata:
  name: PresenzeAssenzeEntrate
projects:
  # My development project
  - name: presasse
    source:
      location: "http://alm.sogei.it/tfs/SIFEntrate1Collection/TP-ENT-SA-0147/_git/PresenzeAssenzeEntrate"
      type: git
      branch: develop_spring_mvc
  # The base project required to the WebSphere dev environemnt!
  - name: wasbase
    source:
      location: "https://Sogei-POC@dev.azure.com/Sogei-POC/Sandbox-Dev-Sogei/_git/devspace-wasbase"
      type: git
      branch: main
components:
  - id: redhat/java8/latest
    type: chePlugin
  - alias: maven
    type: dockerimage
    mountSources: true
    endpoints:
      - name: 8080-tcp
        port: 8080
    memoryLimit: 1Gi
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
      - name: wasconfig
        containerPath: /work/config
      # This volume contains application specific configuration files
      - name: prod_installedApps
        containerPath: /prod/installedApps
    image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8:2.15'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms512m  -Xmx2048m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
      # Nome della cartella in cui copiare le configurazioni del WAS
      # esempio: se la cartella si trova in /prod/installedApps/PresenzeAssenzeEntrate,
      # il valore della variabile dovrà essere "PresenzeAssenzeEntrate"
      - value: "PresenzeAssenzeEntrate"
        name: APP_CONFIG_DIR_NAME
      # path della directory in cui sono salvati i file di configurazione del WAS
      - name: APP_CONFIG_SRC_DIR_PATH
        value: "/projects/presasse/Documentazione/prod/installedApps/PresenzeAssenzeEntrate"
  - alias: wasbase
    type: dockerimage
    image: 'ibmcom/websphere-traditional:9.0.5.12-ubi'
    env:
      # Nome della cartella in cui copiare le configurazioni del WAS
      # esempio: se la cartella si trova in /prod/installedApps/PresenzeAssenzeEntrate,
      # il valore della variabile dovrà essere "PresenzeAssenzeEntrate"
      - name: APP_CONFIG_DIR_NAME
        value: "PresenzeAssenzeEntrate"
      # Property opzionale per definire la password della console ad un valore predefinito.
      # In questo modo si evita che venga definita in maniera random ad ogni riavvio del workspace.
      - name: CUSTOM_CONSOLE_PSW
        value: "wsadmin"
    memoryLimit: 3Gi
    mountSources: true
    volumes:
      # This volume is required to enable profiles command (manageprofile.sh) to not fail!
      - name: profilenable
        containerPath: /workspace
      # This volume will contains the artifacts produced by the build and to be deployed in the server.
      - name: wasconfig
        containerPath: /work/config
      # Thsi volume overwrites the defautl server to make it persistent!
      - name: wasprofile
        containerPath: /opt/IBM/WebSphere/AppServer/profiles/AppSrv01
      - name: wasetc
        containerPath: /etc/websphere
      # This volume contains application specific configuration files
      - name: prod_installedApps
        containerPath: /prod/installedApps
    endpoints:
      - name: apps
        port: 9080
        attributes:
          discoverable: 'true'
          public: 'true'
          protocol: 'http'
          path: /presenzeAssenzeEntrate/login.jsp
      - name: was
        port: 9043
        attributes:
          discoverable: 'true'
          public: 'true'
          protocol: 'https'
    command: ['sleep']
    args: ['infinity']





  - type: openshift
    alias: service-myapp
    referenceContent: |
      apiVersion: v1
      kind: Service
      metadata:
        name: myapp
        labels:
          app: my-app
      spec:
        ports:
        - name: 9080-tcp
          port: 80
          targetPort: 9080

  - type: openshift
    alias: route-myapp
    referenceContent: |
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        annotations:
          openshift.io/host.generated: "true"
          haproxy.router.openshift.io/timeout: 10m
        labels:
          app: my-app
        name: debug
      spec:
        host: debug-presasse-codeready.apps.sandbox-sogei.azure.cloud.areaextra.it
        port:
          targetPort: "9080-tcp"
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: edge
        to:
          kind: Service
          name: myapp
          weight: 100
        wildcardPolicy: None




commands:
  - name: 0. Init default profile
    actions:
      - type: exec
        component: wasbase
        command: scripts/restore_profile.sh ${CHE_PROJECTS_ROOT}/wasbase/scripts/profile90.bck ${CHE_PROJECTS_ROOT}/wasbase/scripts/server-cfg90.props
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 3. Start server
    actions:
      - type: exec
        component: wasbase
        command: scripts/start.sh
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 4. Stop server
    actions:
      - type: exec
        component: wasbase
        command:  scripts/stop.sh
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 5 Deploy (All)
    actions:
      - type: exec
        component: wasbase
        command: /projects/presasse/was/deploy.sh
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 5.1 Deploy elaborazioni
    actions:
      - type: exec
        component: wasbase
        command: /projects/presasse/was/deploy.sh elaborazioni
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 5.2 Deploy stampe
    actions:
      - type: exec
        component: wasbase
        command: /projects/presasse/was/deploy.sh stampe
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 5.3 Deploy timbrature
    actions:
      - type: exec
        component: wasbase
        command: /projects/presasse/was/deploy.sh timbrature
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: 5.4 Deploy frontend
    actions:
      - type: exec
        component: wasbase
        command: /projects/presasse/was/deploy.sh frontend
        workdir: ${CHE_PROJECTS_ROOT}/wasbase

  - name: Tail SystemOut.log
    actions:
      - type: exec
        component: wasbase
        command:  tail -n100 -f  /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/server1/SystemOut.log
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: Tail SystemErr.log
    actions:
      - type: exec
        component: wasbase
        command:  tail -n100 -f  /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/logs/server1/SystemErr.log
        workdir: ${CHE_PROJECTS_ROOT}/wasbase
  - name: Show console Credentials
    actions:
      - type: exec
        component: wasbase
        command:   bash show_credentials.sh
        workdir: ${CHE_PROJECTS_ROOT}/wasbase/scripts


  # actions on component maven
  - name: 0. Init build context
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: 'chmod +x *.sh && ./init.sh'
        component: maven
  - name: 1. Build all
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: './build-all.sh'
        component: maven
  - name: 1.1 Build elaborazioni
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: './build-all.sh elaborazioni'
        component: maven
  - name: 1.2 Build stampe
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: './build-all.sh stampe'
        component: maven
  - name: 1.3 Build timbrature
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: './build-all.sh timbrature'
        component: maven
  - name: 1.4 Build frontend
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/presasse/was'
        type: exec
        command: './build-all.sh frontend'
        component: maven


  - name: 5. Debug (Attach)
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
          {
              "type": "java",
              "request": "attach",
              "name": "Debug (Attach)",
              "hostName": "localhost",
              "port": 7777
          }
          ]
          }
        type: vscode-launch
    # events:
    #  postStart:
